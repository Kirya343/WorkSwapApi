server:
  port: 8083
  tomcat:
    max-http-form-post-data-size: 100MB # Default, but good to know
    max-swallow-size: -1 # Allows unlimited size for multipart requests, if needed
    max-part-count: 1000
    max-http-form-post-size: 20971520  # 20MB

spring:
  profiles:
    active: 
      - "api"
      - "production"
      - "backoffice"
  web:
    resources:
      static-locations: classpath:/static/,classpath:/images/
  mvc:
    static-path-pattern: /**
  servlet:
    multipart:
      enabled: true                # Включить поддержку multipart (по умолчанию true, но лучше указать явно)
      max-file-size: 20MB          # Максимальный размер одного файла
      max-request-size: 100MB       # Максимальный общий размер всех файлов в одном запросе
      file-size-threshold: 2MB      # Порог после которого данные пишутся на диск (0 — сразу на диск)
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate: 
        format_sql: false
      connection:
        isolationLevel: 2 # READ_COMMITTED
    show-sql: false
  messages:
    basename: lang/messages
    encoding: UTF-8
    cache-duration: 0
  lifecycle:
    timeout-per-shutdown-phase: "20s"
logging:
  pattern:
    console: "%d{HH:mm:ss yyyy-MM-dd} [%thread] %-5level %logger{36} - %msg%n"

api:
  url: http://localhost:8083 #https://api.workswap.org
  key:
    localization: 9gxqzuZo8EmYopc5MF43

backoffice:
  url: http://localhost:5173

cloud:
  #url: http://localhost:8084
  url: https://cloud.workswap.org

app:
  cookie:
    secure: false
    domain: "" #".workswap.org"
    sameSite: "Lax"

tgbot:
  url: http://89.35.130.223:30003

isTest: true